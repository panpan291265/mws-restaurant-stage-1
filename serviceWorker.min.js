const cachePrefix="resto-revs",cacheVersion="v0001",cacheName="resto-revs-v0001";self.addEventListener("install",e=>{e.waitUntil(caches.open(cacheName).then(function(e){let s=["index.html","restaurant.html","data/restaurants.json","img/folder-web-yellow.ico","css/styles.css","css/styles.min.css","js/urlhelper.js","js/urlhelper.min.js","js/dbhelper.js","js/dbhelper.min.js","js/main.js","js/main.min.js","js/restaurant_info.js","js/restaurant_info.min.js"];const t=["","-200","-300","-400","-500","-600"];for(let e=1;e<=10;e++)t.forEach(t=>s.push(`img/${e}${t}.jpg`)),s.push(`restaurant.html?id=${e}`);return e.addAll(s)}).catch(e=>console.error(e)))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.filter(e=>e.startsWith(cachePrefix)&&e!==cacheName).map(e=>caches.delete(e)))).catch(e=>console.error(e)))}),self.addEventListener("fetch",e=>{new URL(e.request.url);return new Promise((s,t)=>{caches.open(cacheName).then(t=>{let r=e.request.url;r&&"/"!==r||(r="index.html"),t.match(r).then(c=>{if(c)return s(c);fetch(e.request).then(e=>(t.put(r,e.clone()),s(e))).catch(e=>console.error(e))}).catch(e=>console.error(e))}).catch(e=>console.error(e))})});