class DBHelper{static get DATABASE_URL(){return`${UrlHelper.ROOT_URL}data/restaurants.json`}static fetchRestaurants(e){let t=new XMLHttpRequest;t.open("GET",DBHelper.DATABASE_URL),t.onload=(()=>{if(200===t.status){const l=JSON.parse(t.responseText).restaurants;e(null,l)}else{const l=`Request failed. Returned status of ${t.status}`;e(l,null)}}),t.send()}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.find(t=>t.id==e);l?t(null,l):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.filter(t=>t.cuisine_type==e);t(null,l)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.filter(t=>t.neighborhood==e);t(null,l)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,l){DBHelper.fetchRestaurants((s,a)=>{if(s)l(s,null);else{let s=a;"all"!=e&&(s=s.filter(t=>t.cuisine_type==e)),"all"!=t&&(s=s.filter(e=>e.neighborhood==t)),l(null,s)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,l)=>{if(t)e(t,null);else{const t=l.map((e,t)=>l[t].neighborhood),s=t.filter((e,l)=>t.indexOf(e)==l);e(null,s)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,l)=>{if(t)e(t,null);else{const t=l.map((e,t)=>l[t].cuisine_type),s=t.filter((e,l)=>t.indexOf(e)==l);e(null,s)}})}static urlForRestaurant(e){return`${UrlHelper.ROOT_URL}restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e,t=null){let l=e.photograph;return t&&(l=l.replace(/.jpg$/,`${t}.jpg`)),`${UrlHelper.ROOT_URL}img/${l}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}